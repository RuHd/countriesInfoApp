{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\React APIs\\\\countries-info-data\\\\src\\\\components\\\\countriesSection\\\\countriesSection.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport './countriesSection.css';\nimport { MyContext } from '../../MyContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardCountry = ({\n  countryName,\n  flag,\n  handleClickCard,\n  id\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cardCountry\",\n    onClick: () => handleClickCard(id),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: countryName == \"Nepal\" ? \"nepal--style flag--container\" : \"flag--container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: flag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: countryName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 7\n  }, this);\n};\n_c = CardCountry;\nconst CountriesSection = ({\n  handleClickCard,\n  filteredCountry,\n  chosenContinent\n}) => {\n  _s();\n  const countries = useContext(MyContext);\n  const [filteredList, setfilteredList] = useState();\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"countries--section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Click on the Card Country for more info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countries--list\",\n      children: [filteredCountry.length > 0 && countries.countriesData.map((country, id) => {\n        if (country.name.common.toLowerCase().includes(filteredCountry.toLowerCase())) return /*#__PURE__*/_jsxDEV(CardCountry, {\n          countryName: country.name.common,\n          flag: country.flags.png,\n          id: id,\n          handleClickCard: handleClickCard\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this);\n      }), countries.countriesData.map((country, id) => {\n        return /*#__PURE__*/_jsxDEV(CardCountry, {\n          countryName: country.name.common,\n          flag: country.flags.png,\n          id: id,\n          handleClickCard: handleClickCard\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(CountriesSection, \"CaqHjkmBgxweVvuin2GzKoek/DQ=\");\n_c2 = CountriesSection;\nexport default CountriesSection;\nvar _c, _c2;\n$RefreshReg$(_c, \"CardCountry\");\n$RefreshReg$(_c2, \"CountriesSection\");","map":{"version":3,"names":["React","useContext","useState","useEffect","MyContext","jsxDEV","_jsxDEV","CardCountry","countryName","flag","handleClickCard","id","className","onClick","children","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","CountriesSection","filteredCountry","chosenContinent","_s","countries","filteredList","setfilteredList","length","countriesData","map","country","name","common","toLowerCase","includes","flags","png","_c2","$RefreshReg$"],"sources":["C:/Users/Usuario/Desktop/React APIs/countries-info-data/src/components/countriesSection/countriesSection.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\r\nimport './countriesSection.css'\r\nimport { MyContext } from '../../MyContext'\r\n\r\nconst CardCountry = ({countryName, flag, handleClickCard,id }) => {\r\n \r\n    return (\r\n      <div className='cardCountry' onClick={() => handleClickCard(id)}>\r\n        <div className={countryName == \"Nepal\" ? \"nepal--style flag--container\" : \"flag--container\"}>\r\n            <img src={flag}/>\r\n        </div> \r\n        <h3>{countryName}</h3>\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nconst CountriesSection = ({handleClickCard,filteredCountry, chosenContinent}) => {\r\n    const countries = useContext(MyContext)\r\n    const [filteredList, setfilteredList] = useState()\r\n  \r\n\r\n  return (\r\n    <section className='countries--section'>\r\n        <h2>Click on the Card Country for more info</h2>\r\n        <div className='countries--list'>\r\n          {filteredCountry.length > 0 && countries.countriesData.map((country,id) => {\r\n            if (country.name.common.toLowerCase().includes(filteredCountry.toLowerCase()))\r\n            return (\r\n              <CardCountry\r\n                key={id}\r\n                countryName={country.name.common}\r\n                flag = {country.flags.png}\r\n                id={id}\r\n                handleClickCard={handleClickCard}\r\n              />\r\n            )\r\n          })}\r\n            {countries.countriesData.map((country,id) => {\r\n              return (\r\n                <CardCountry\r\n                  key={id}\r\n                  countryName={country.name.common}\r\n                  flag = {country.flags.png}\r\n                  id={id}\r\n                  handleClickCard={handleClickCard}\r\n                />\r\n              )\r\n            })}\r\n        </div>\r\n    </section>\r\n    \r\n  )\r\n}\r\n\r\nexport default CountriesSection"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC9D,OAAO,wBAAwB;AAC/B,SAASC,SAAS,QAAQ,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,WAAW,GAAGA,CAAC;EAACC,WAAW;EAAEC,IAAI;EAAEC,eAAe;EAACC;AAAG,CAAC,KAAK;EAE9D,oBACEL,OAAA;IAAKM,SAAS,EAAC,aAAa;IAACC,OAAO,EAAEA,CAAA,KAAMH,eAAe,CAACC,EAAE,CAAE;IAAAG,QAAA,gBAC9DR,OAAA;MAAKM,SAAS,EAAEJ,WAAW,IAAI,OAAO,GAAG,8BAA8B,GAAG,iBAAkB;MAAAM,QAAA,eACxFR,OAAA;QAAKS,GAAG,EAAEN;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACNb,OAAA;MAAAQ,QAAA,EAAKN;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEZ,CAAC;AAAAC,EAAA,GAVKb,WAAW;AAajB,MAAMc,gBAAgB,GAAGA,CAAC;EAACX,eAAe;EAACY,eAAe;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAC7E,MAAMC,SAAS,GAAGxB,UAAU,CAACG,SAAS,CAAC;EACvC,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAGzB,QAAQ,CAAC,CAAC;EAGpD,oBACEI,OAAA;IAASM,SAAS,EAAC,oBAAoB;IAAAE,QAAA,gBACnCR,OAAA;MAAAQ,QAAA,EAAI;IAAuC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChDb,OAAA;MAAKM,SAAS,EAAC,iBAAiB;MAAAE,QAAA,GAC7BQ,eAAe,CAACM,MAAM,GAAG,CAAC,IAAIH,SAAS,CAACI,aAAa,CAACC,GAAG,CAAC,CAACC,OAAO,EAACpB,EAAE,KAAK;QACzE,IAAIoB,OAAO,CAACC,IAAI,CAACC,MAAM,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACb,eAAe,CAACY,WAAW,CAAC,CAAC,CAAC,EAC7E,oBACE5B,OAAA,CAACC,WAAW;UAEVC,WAAW,EAAEuB,OAAO,CAACC,IAAI,CAACC,MAAO;UACjCxB,IAAI,EAAIsB,OAAO,CAACK,KAAK,CAACC,GAAI;UAC1B1B,EAAE,EAAEA,EAAG;UACPD,eAAe,EAAEA;QAAgB,GAJ5BC,EAAE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKR,CAAC;MAEN,CAAC,CAAC,EACCM,SAAS,CAACI,aAAa,CAACC,GAAG,CAAC,CAACC,OAAO,EAACpB,EAAE,KAAK;QAC3C,oBACEL,OAAA,CAACC,WAAW;UAEVC,WAAW,EAAEuB,OAAO,CAACC,IAAI,CAACC,MAAO;UACjCxB,IAAI,EAAIsB,OAAO,CAACK,KAAK,CAACC,GAAI;UAC1B1B,EAAE,EAAEA,EAAG;UACPD,eAAe,EAAEA;QAAgB,GAJ5BC,EAAE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKR,CAAC;MAEN,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAGd,CAAC;AAAAK,EAAA,CApCKH,gBAAgB;AAAAiB,GAAA,GAAhBjB,gBAAgB;AAsCtB,eAAeA,gBAAgB;AAAA,IAAAD,EAAA,EAAAkB,GAAA;AAAAC,YAAA,CAAAnB,EAAA;AAAAmB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}